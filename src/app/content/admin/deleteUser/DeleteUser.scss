@use '../../../../data/constants/Colors.scss' as vars;

/* reset */
button {
	all: unset;
}

.AlertDialogOverlay {
	background-color: rgba(0,0,0,0.6);
	position: fixed;
	inset: 0;
	animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.AlertDialogContent {
	background-color: white;
	border-radius: 6px;
	box-shadow:
		hsl(206 22% 7% / 35%) 0px 10px 38px -10px,
		hsl(206 22% 7% / 20%) 0px 10px 20px -15px;
	position: fixed;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 90vw;
	max-width: 500px;
	max-height: 85vh;
	padding: 25px;
	animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.AlertDialogTitle {
	margin: 0;
	color: vars.$vilv-blue;
	font-weight: bold;
	font-size: 17px;
}

.AlertDialogDescription {
	margin-bottom: 20px;
	font-size: 15px;
	line-height: 1.5;
}

.Button {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	border-radius: 4px;
	border: 1px solid black;
	padding: 0 15px;
	font-size: 15px;
	line-height: 1;
	font-weight: 500;
	height: 35px;
}
.Button.delete {
	background-color: white;
	color: blue;
}
.Button.delete:hover {
	background-color: vars.$vilv-blue;
	stroke: white;
}
.Button.confirm {
	background-color: red;
	color: white;
	border: 1px solid red;
}
.Button.confirm:hover {
	background-color: darkred;
	stroke: white;
	border: 1px solid darkred;
}
.Button.back {
	background-color: white;
	color: vars.$vilv-blue;
	border: 1px solid vars.$vilv-blue;
}
.Button.back:hover {
	background-color: vars.$vilv-lightblue;
	stroke: white;
}

@keyframes overlayShow {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes contentShow {
	from {
		opacity: 0;
		transform: translate(-50%, -48%) scale(0.96);
	}
	to {
		opacity: 1;
		transform: translate(-50%, -50%) scale(1);
	}
}
